** dict(딕셔너리 자료형)
-key와 value를 {}에 묶어서 표현하는 자료형이다. 
ex)dic={'name':'pey', 'phone':'01000010001', 'birth':'0630'}
이렇게 key:value로 이뤄진 자료형이다. 여러 쌍이 있을수 있다
-value로 리스트도 넣을 수 있다. 표현이 자유로운 편
-이미 있는 딕셔너리 자료형에 쌍을 추가or 삭제할 수 있다
  추가==>dic[2]='b'라고 하면 위의 dic에서  {'name':'pey', 'phone':'01000010001', 'birth':'0630', 2:'b'} 이렇게 추가된다
  삭제==> del dic[key 값]을 실행하면 dic에서 해당 key와 value가 삭제된다.

-dic[key]를 사용해 Value값을 얻어온다.
	ex)dic['name']을 입력하면 'pey'가 나온다.
-딕셔너리 자료형 선언시 반드시 key는 고유해야 된다 겹치면 하나는 없는것 취급함

<dict 관련 함수들>
1)a.keys ==> keys함수 리스트 만들기. dic.keys()라고 하면 ['name','phone','birth']가 반환된다.
3.0이후 버전에서는 메모리 낭비방지를 위해 dict_keys를 반환하는데 일반적인 리스트로 받고 싶은 경우 list(dic.keys())를 사용하면된다
2)a.values ==>Value 리스트 만들기. dic.values()라고 하면 pey 010000010001 0630이 리스트 형식으로 반환된다. 마찬가지로 메모리 낭비 방지를 위해 3.0 이후부터는 dict_values 객체를 반환 하므로 list(여기에)를 사용하며 리스트로 받아온다.
3)Key, Value 쌍 받기 ==> items 함수 dic.items()를 사용하면 dict_items객체로 ([('name','peny'),('phone','01000010001'),('birth','0630')])이렇게 반환된다. 이를 활용해 replace로 Key값을 vlaue로 바꿀 수 있다.
4)dict 자료형 비우기 ==>.clear()함수를 사용하면 {}로 반환된다.
5)Key가 dict에있는지 조사하기==> 'name' in dic 이렇게 in 함수를 활용해서 True/False를 반환 받는다.
6)Key로 Value 얻기 ==>get함수 dic.get('name')이렇게 key를 활용해 Pey라는 Value를 가져올 수 있다. 